=============
Manage shares
=============

The default configuration of Manila uses Cinder-based back end. In that case,
Manila cares about everything (VMs, networking, keypairs, security groups)
by itself. It is not production solution, but can help you to understand how
Manila works.

.. note::

   Manila provides set of drivers that enable you to use various network file
   storage devices, instead of the base implementation. That is the real
   purpose of the Manila service in production.

**To create file share using generic driver with default configuration**

#. Configure the Manila service through the :file:`manila.conf` file.
#. Use the :command:`manila share-network-create` to create share network.
   It points to Manila from what network new share will be used.
   This command creates service network and configure router to provide
   connectivity between it and share network.
#. Use the :command:`manila create` command to create a share. This
   command do the following things:

   * If there is no available share servers, the Manila service will launch
     new instance from service image, attach it to service network and register
     it as a new share server.
   * Creates new volume of required size and attaches it to service instance.
   * The NFS service on service instance is configured to use attached volume
     and expose NFS share.
#. After share becomes available, use the nova :command:`manila show` command
   to get NFS share endpoint.
#. Use :command:`manila access-allow` command to grant access to the new share.

.. toctree::
    file_shares_networking.rst
    file_shares_resize.rst
    file_shares_backup.rst

Sections TODO
~~~~~~~~~~~~~

- Setup back ends
- Spawn share services
- Share type filters
- Consistency groups
- Quotas and limits
