===============================
Security boundaries and threats
===============================

A cloud can be abstracted as a collection of logical components by virtue of
their function, users, and shared security concerns, which we call security
domains. Threat actors and vectors are classified based on their motivation and
access to resources. Our goal is to provide you a sense of the security
concerns with respect to each domain depending on your risk/vulnerability
protection objectives.

Security domains
~~~~~~~~~~~~~~~~

A security domain comprises users, applications, servers or networks that share
common trust requirements and expectations within a system.  Typically they
have the same authentication and authorization (AuthN/Z) requirements and
users.

Although you may desire to break these domains down further (we later discuss
where this may be appropriate), we generally refer to four distinct security
domains which form the bare minimum that is required to deploy any OpenStack
cloud securely. These security domains are:

1. Public
2. Guest
3. Management
4. Data

We selected these security domains because they can be mapped independently or
combined to represent the majority of the possible areas of trust within a
given OpenStack deployment. For example, some deployment topologies may consist
of a combination of guest and data domains onto one physical network while
other topologies have these domains separated. In each case, the cloud operator
should be aware of the appropriate security concerns. Security domains should
be mapped out against your specific OpenStack deployment topology. The domains
and their trust requirements depend upon whether the cloud instance is public,
private, or hybrid.

.. image:: ../figures/untrusted_trusted.png

Public
------

The public security domain is an entirely untrusted area of the cloud
infrastructure. It can refer to the Internet as a whole or simply to networks
over which you have no authority. Any data that transits this domain with
confidentiality or integrity requirements should be protected using
compensating controls.

This domain should always be considered *untrusted*.

Guest
-----

Typically used for compute instance-to-instance traffic, the guest security
domain handles compute data generated by instances on the cloud but not
services that support the operation of the cloud, such as API calls.

Public and private cloud providers that do not have stringent controls on
instance use or allow unrestricted internet access to VMs should consider this
domain to be *untrusted*. Private cloud providers may want to consider this
network as internal and *trusted*, only if the proper controls are implemented
to assert that the instances and all associated tenants are to be trusted.

Management
----------

The management security domain is where services interact. Sometimes referred
to as the "control plane", the networks in this domain transport confidential
data such as configuration parameters, user names, and passwords. Command and
Control traffic typically resides in this domain, which necessitates strong
integrity requirements. Access to this domain should be highly restricted and
monitored. At the same time, this domain should still employ all of the
security best practices described in this guide.

In most deployments this domain is considered *trusted*. However, when
considering an OpenStack deployment, there are many systems that bridge this
domain with others, potentially reducing the level of trust you can place on
this domain. See :ref:`Bridging_security_domains` for more information.

Data
----

The data security domain is concerned primarily with information pertaining to
the storage services within OpenStack. Most of the data transmitted across this
network requires high levels of integrity and confidentiality. In some cases,
depending on the type of deployment there may also be strong availability
requirements.

The trust level of this network is heavily dependent on deployment decisions
and as such we do not assign this any default level of trust.

.. _Bridging_security_domains:

Bridging security domains
~~~~~~~~~~~~~~~~~~~~~~~~~

A *bridge* is a component that exists inside more than one security domain. Any
component that bridges security domains with different trust levels or
authentication requirements must be carefully configured.  These bridges are
often the weak points in network architecture. A bridge should always be
configured to meet the security requirements of the highest trust level of any
of the domains it is bridging. In many cases the security controls for bridges
should be a primary concern due to the likelihood of attack.

.. image:: ../figures/bridging_security_domains_1.png

The diagram above shows a compute node bridging the data and management
domains, as such the compute node should be configured to meet the security
requirements of the management domain. Similarly, the API Endpoint in this
diagram is bridging the untrusted public domain and the management domain,
which should be configured to protect against attacks from the public domain
propagating through to the management domain.

.. image:: ../figures/bridging_domains_clouduser.png

In some cases deployers may want to consider securing a bridge to a higher
standard than any of the domains in which it resides. Given the above example
of an API endpoint, an adversary could potentially target the API endpoint from
the public domain, leveraging it in the hopes of compromising or gaining access
to the management domain.

The design of OpenStack is such that separation of security domains is
difficult - as core services will usually bridge at least two domains, special
consideration must be given when applying security controls to them.

Threat classification, actors and attack vectors
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Most types of cloud deployment, public or private, are exposed to some form of
attack. In this chapter we categorize attackers and summarize potential types
of attacks in each security domain.

Threat actors
-------------

A threat actor is an abstract way to refer to a class of adversary that you may
attempt to defend against. The more capable the actor, the more expensive the
security controls that are required for successful attack mitigation and
prevention. Security is a tradeoff between cost, usability and defense. In some
cases it will not be possible to secure a cloud deployment against all of the
threat actors we describe here.  Those deploying an OpenStack cloud will have
to decide where the balance lies for their deployment / usage.

Intelligence services
   Considered by this guide as the most capable
   adversary. Intelligence services and other state actors can bring tremendous
   resources to bear on a target. They have capabilities beyond that of any
   other actor. It is very difficult to defend against these actors without
   incredibly stringent controls in place, both human and technical.

Serious organized crime
  Highly capable and financially driven groups
  of attackers. Able to fund in-house exploit development and target research.
  In recent years the rise of organizations such as the Russian Business
  Network, a massive cyber-criminal enterprise has demonstrated how cyber
  attacks have become a commodity. Industrial espionage falls within the
  serious organized crime group.

Highly capable groups
  This refers to 'Hacktivist' type organizations
  who are not typically commercially funded but can pose a serious threat to
  service providers and cloud operators.

Motivated individuals
  Acting alone, these attackers come in many
  guises, such as rogue or malicious employees, disaffected customers, or
  small-scale industrial espionage.

Script kiddies
  Automated vulnerability scanning/exploitation.
  Non-targeted attacks. Often only a nuisance, compromise by one of these
  actors presents a major risk to an organization's reputation.

.. image:: ../figures/threat_actors.png

Public and private cloud considerations
---------------------------------------

Private clouds are typically deployed by enterprises or institutions inside
their networks and behind their firewalls. Enterprises will have strict
policies on what data is allowed to exit their network and may even have
different clouds for specific purposes. Users of a private cloud are typically
employees of the organization that owns the cloud and are able to be held
accountable for their actions. Employees often attend training sessions before
accessing the cloud and will likely take part in regular scheduled security
awareness training. Public clouds by contrast cannot make any assertions about
their users, cloud use-cases or user motivations. This immediately pushes the
guest security domain into a completely *untrusted* state for public cloud
providers.

A notable difference in the attack surface of public clouds is that they must
provide internet access to their services. Instance connectivity, access to
files over the internet and the ability to interact with the cloud controlling
fabric such as the API endpoints and dashboard are must-haves for the public
cloud.

Privacy concerns for public and private cloud users are typically diametrically
opposed. The data generated and stored in private clouds is normally owned by
the operator of the cloud, who is able to deploy technologies such as data loss
prevention (DLP) protection, file inspection, deep packet inspection and
prescriptive firewalling. In contrast, privacy is one of the primary barriers
for the adoption of public cloud infrastructures, as many of the previously
mentioned controls do not exist.

Outbound attacks and reputational risk
--------------------------------------

Careful consideration should be given to potential outbound abuse from a cloud
deployment. Whether public or private, clouds tend to have lots of resource
available. An attacker who has established a point of presence within the
cloud, either through hacking or entitled access, such as rogue employee, can
bring these resources to bear against the internet at large. Clouds with
compute services make for ideal DDoS and brute force engines. The issue is more
pressing for public clouds as their users are largely unaccountable, and can
quickly spin up numerous disposable instances for outbound attacks. Major
damage can be inflicted upon a company's reputation if it becomes known for
hosting malicious software or launching attacks on other networks. Methods of
prevention include egress security groups, outbound traffic inspection,
customer education and awareness, and fraud and abuse mitigation strategies.


.. _introduction_attack_types:

Attack types
------------

The diagram shows the types of attacks that may be expected from the actors
described in the previous section. Note that there will always be exceptions to
this diagram but in general, this describes the sorts of attack that could be
typical for each actor.

.. figure:: ../figures/high-capability.png

   Attack types

The prescriptive defense for each form of attack is beyond the scope of this
document. The above diagram can assist you in making an informed decision about
which types of threats, and threat actors, should be protected against. For
commercial public cloud deployments this might include prevention against
serious crime. For those deploying private clouds for government use, more
stringent protective mechanisms should be in place, including carefully
protected facilities and supply chains. In contrast those standing up basic
development or test environments will likely require less restrictive controls
(middle of the spectrum).
